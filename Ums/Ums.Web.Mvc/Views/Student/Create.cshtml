@model Ums.Entities.Student

@{
    ViewBag.SubTitle = "Create";
}

@section PageNav
{
    <nav class="navbar navbar-expand-sm bg-primary">
        <a href="@Url.Action("Index")" class="btn btn-primary btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-list"></i>
            </span>
            <span class="text">View List</span>
        </a>
    </nav>
    <br />
    @Html.Raw(ViewBag.AlertMessage)
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            Department
            <div>
                <select name="DepartmentId" class="custom-select">
                    <option value="">Select ... </option>
                    @{
                        foreach (var item in ViewBag.Departments)
                        {
                            <option value="@item.Id" @(Model != null && item.Id == Model.DepartmentId ? "selected" : "")>@item.Name</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Name
            <div>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", onkeyup = "generateUserName(this.value)" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            UserName
            <div>
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Email
            <div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Status
            <div>
                <select name="IsActive" class="custom-select">
                    <option value="false" @(Model != null && Model.IsActive == false ? "selected" : "")>Locked</option>
                    <option value="true" @(Model != null && Model.IsActive == true ? "selected" : "")>Active</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section PageLevelScripts{
    <script>
        function generateUserName(name) {
            let names = name.trim().split(" ");
            if (names.length == 1) 
                $("#UserName").val(names[0].toLowerCase());
            else
                $("#UserName").val((names[names.length-1].charAt(0) + names[0]).toLowerCase());
        }
    </script>
}